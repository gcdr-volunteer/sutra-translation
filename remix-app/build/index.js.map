{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/context.tsx", "../app/createEmotionCache.ts", "../app/root.tsx", "../app/theme/breakpoints.ts", "../app/theme/colors.ts", "../app/theme/index.ts", "../app/routes/update_password.tsx", "../app/auth.server.ts", "../app/session.server.ts", "../app/clients/dynamodb.ts", "../app/models/user.ts", "../app/models/utils.ts", "../app/types/user.ts", "../app/routes/__app.tsx", "../app/components/common/sidebar.tsx", "../app/authorisation/ability.ts", "../app/authorisation/can.ts", "../app/routes/__app/translation.tsx", "../app/components/common/modal.tsx", "../app/components/common/breadcrumb.tsx", "../app/components/common/paragraph.tsx", "../app/components/common/sutra.tsx", "../app/routes/__app/translation/$sutraId/$rollId/index.tsx", "../app/routes/__app/translation/$sutraId/index.tsx", "../app/components/common/roll.tsx", "../app/routes/__app/translation/index.tsx", "../app/routes/__app/dashboard.tsx", "../app/routes/__app/tripitaka.tsx", "../app/routes/__app/tripitaka/$sutraId/$rollId/staging.tsx", "../app/components/common/errors/error.tsx", "../app/components/common/errors/info.tsx", "../app/components/common/errors/warn.tsx", "../app/routes/__app/tripitaka/$sutraId/$rollId/index.tsx", "../app/routes/__app/tripitaka/$sutraId/index.tsx", "../app/routes/__app/tripitaka/index.tsx", "../app/routes/__app/setting.tsx", "../app/routes/__app/admin.tsx", "../app/routes/__app/index.tsx", "../app/routes/login.tsx", "../app/utils/regex.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// entry.server.tsx\nimport { renderToString } from 'react-dom/server';\nimport { CacheProvider } from '@emotion/react';\nimport createEmotionServer from '@emotion/server/create-instance';\nimport { RemixServer } from '@remix-run/react';\nimport type { EntryContext } from '@remix-run/node'; // Depends on the runtime you choose\n\nimport { ServerStyleContext } from './context';\nimport createEmotionCache from './createEmotionCache';\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const cache = createEmotionCache();\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n\n  const html = renderToString(\n    <ServerStyleContext.Provider value={null}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  const chunks = extractCriticalToChunks(html);\n\n  const markup = renderToString(\n    <ServerStyleContext.Provider value={chunks.styles}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  responseHeaders.set('Content-Type', 'text/html');\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "// context.tsx\nimport { createContext } from 'react';\n\nexport interface ServerStyleContextData {\n  key: string;\n  ids: Array<string>;\n  css: string;\n}\n\nexport const ServerStyleContext = createContext<ServerStyleContextData[] | null>(null);\n\nexport interface ClientStyleContextData {\n  reset: () => void;\n}\n\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(null);\n", "// createEmotionCache.ts\nimport createCache from '@emotion/cache';\nexport const defaultCache = createEmotionCache();\nexport default function createEmotionCache() {\n  return createCache({ key: 'cha' });\n}\n", "// root.tsx\nimport React, { useContext, useEffect } from 'react';\nimport { withEmotionCache } from '@emotion/react';\nimport { ChakraProvider, cookieStorageManagerSSR, extendTheme } from '@chakra-ui/react';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Scripts,\n  Outlet,\n  ScrollRestoration,\n  useLoaderData,\n} from '@remix-run/react';\nimport type { MetaFunction, LinksFunction, LoaderArgs } from '@remix-run/node';\nimport { ServerStyleContext, ClientStyleContext } from './context';\nimport { customTheme } from './theme';\n\nexport const loader = async ({ request }: LoaderArgs): Promise<string> => {\n  // first time users will not have any cookies and you may not return\n  // undefined here, hence ?? is necessary\n  return request.headers.get('cookie') ?? '';\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'Sutra Translation',\n  viewport: 'width=device-width,initial-scale=1',\n});\n\nexport let links: LinksFunction = () => {\n  return [\n    { rel: 'preconnect', href: 'https://fonts.googleapis.com' },\n    { rel: 'preconnect', href: 'https://fonts.gstatic.com' },\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap',\n    },\n  ];\n};\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nconst Document = withEmotionCache(({ children }: DocumentProps, emotionCache) => {\n  const serverStyleData = useContext(ServerStyleContext);\n  const clientStyleData = useContext(ClientStyleContext);\n\n  // Only executed on client\n  useEffect(() => {\n    // re-link sheet container\n    emotionCache.sheet.container = document.head;\n    // re-inject tags\n    const tags = emotionCache.sheet.tags;\n    emotionCache.sheet.flush();\n    tags.forEach((tag) => {\n      (emotionCache.sheet as any)._insertTag(tag);\n    });\n    // reset cache to reapply global styles\n    clientStyleData?.reset();\n  }, []);\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n        {serverStyleData?.map(({ key, ids, css }) => (\n          <style\n            key={key}\n            data-emotion={`${key} ${ids.join(' ')}`}\n            dangerouslySetInnerHTML={{ __html: css }}\n          />\n        ))}\n      </head>\n      <body>\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n});\n\nconst theme = extendTheme({ ...customTheme });\n\nexport default function App() {\n  const cookies = useLoaderData<typeof loader>();\n  return (\n    <Document>\n      <ChakraProvider colorModeManager={cookieStorageManagerSSR(cookies)} resetCSS theme={theme}>\n        <Outlet />\n      </ChakraProvider>\n    </Document>\n  );\n}\n", "export const breakpoints = {\n  sm: '320px',\n  md: '768px',\n  lg: '960px',\n  xl: '1200px',\n};\n", "export const colors = {\n  colors: {\n    brand: {\n      900: '#1a365d',\n      800: '#153e75',\n      700: '#2a69ac',\n    },\n    primary: {\n      300: '#c98749',\n      800: '#3c3b4b',\n    },\n    secondary: {\n      300: '#FEFCF6',\n      500: '#F5F3F4',\n      800: '#DCD9DA',\n    },\n    iconButton: {\n      500: '#BF8A54',\n    },\n  },\n};\n", "import { breakpoints } from './breakpoints';\nimport { colors } from './colors';\nexport const customTheme = {\n  ...colors,\n  ...breakpoints,\n};\n", "import {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Heading,\n  Input,\n  Spinner,\n} from '@chakra-ui/react';\nimport { ActionArgs, json, LoaderArgs, redirect } from '@remix-run/node';\nimport { useActionData, Form, useTransition } from '@remix-run/react';\nimport { assertAuthUser, authenticator } from '~/auth.server';\nimport { updateUserPassword } from '~/models/user';\nimport { commitSession, getSession } from '~/session.server';\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  await assertAuthUser(request);\n  return json({});\n};\n\nexport async function action({ request }: ActionArgs) {\n  try {\n    const clonedRequest = request.clone();\n    const form = await clonedRequest.formData();\n    const newPass = form.get('new_pass') as string;\n    const confirmPass = form.get('confirm_pass') as string;\n    if (!newPass || !confirmPass) {\n      return json({ password: 'password cannot be empty' }, { status: 400 });\n    }\n    if (newPass !== confirmPass) {\n      return json({ password: 'two passwords are not equal' }, { status: 400 });\n    }\n\n    const user = await authenticator.isAuthenticated(request);\n    if (user) {\n      await updateUserPassword({ email: user.email, password: confirmPass });\n      let session = await getSession(clonedRequest.headers.get('cookie'));\n\n      let headers = new Headers({ 'Set-Cookie': await commitSession(session) });\n      return redirect('/', { headers });\n    }\n    return redirect('/login');\n  } catch (error) {\n    return json({ password: 'Internal Server Error' }, { status: 500 });\n  }\n}\n\nexport default function UpdatePasswordRoute() {\n  const actionData = useActionData<{ password: string }>();\n  return (\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box\n        borderWidth={1}\n        px={4}\n        width=\"full\"\n        maxWidth=\"500px\"\n        borderRadius={4}\n        textAlign=\"center\"\n        boxShadow=\"lg\"\n      >\n        <Box p={4}>\n          <UpdatePasswordHeader />\n          <UpdatePasswordForm actionData={actionData} />\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\nconst UpdatePasswordHeader = () => {\n  return (\n    <Box textAlign=\"center\">\n      <Heading>Update Your Password</Heading>\n    </Box>\n  );\n};\n\ntype LoginFormProps = {\n  actionData?: {\n    password: string;\n  };\n};\nconst UpdatePasswordForm = (props: LoginFormProps) => {\n  const transition = useTransition();\n  const isLoading = Boolean(transition.submission);\n  const { password } = props.actionData || {};\n  return (\n    <Box my={8} textAlign=\"left\">\n      <Form method=\"post\">\n        <FormControl isInvalid={Boolean(password)}>\n          <FormLabel>New Password</FormLabel>\n          <Input type=\"password\" placeholder=\"Enter your new password\" name=\"new_pass\" />\n        </FormControl>\n\n        <FormControl mt={4} isInvalid={Boolean(password)}>\n          <FormLabel>Confirm Password</FormLabel>\n          <Input type=\"password\" placeholder=\"Confirm your new password\" name=\"confirm_pass\" />\n          {password ? <FormErrorMessage>{password}</FormErrorMessage> : null}\n        </FormControl>\n\n        <Button colorScheme={'iconButton'} width=\"full\" mt={4} type=\"submit\" disabled={isLoading}>\n          {isLoading ? <Spinner /> : 'Save'}\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n", "// app/services/auth.server.ts\nimport { Authenticator } from 'remix-auth';\nimport { sessionStorage } from './session.server';\nimport { User } from './types/user';\nimport { FormStrategy } from 'remix-auth-form';\nimport invariant from 'tiny-invariant';\nimport bcrypt from 'bcryptjs';\nimport { LoaderArgs } from '@remix-run/node';\nimport { getUserByEmail } from './models/user';\nexport let authenticator = new Authenticator<User | undefined>(sessionStorage);\n\nauthenticator.use(\n  new FormStrategy(async ({ form, context }) => {\n    let username = form.get('username');\n    let password = form.get('password');\n\n    const user = await getUserByEmail(username as string);\n    if (user) {\n      const isValid = await bcrypt.compare(password as string, user.password);\n      if (isValid) {\n        const { password, ...rest } = user;\n        return rest;\n      }\n      return undefined;\n    }\n    return undefined;\n  })\n);\n\nexport const assertAuthUser = async (request: LoaderArgs['request']) => {\n  return await authenticator.isAuthenticated(request, {\n    failureRedirect: '/login',\n  });\n};\n", "// app/services/session.server.ts\nimport { createCookieSessionStorage } from '@remix-run/node';\n\n// export the whole sessionStorage object\nexport let sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: '_session', // use any name you want here\n    sameSite: 'lax', // this helps with CSRF\n    path: '/', // remember to add this so the cookie will work in all routes\n    httpOnly: true, // for security reasons, make this cookie http only\n    secrets: [process.env.SESSION_SECRET], // replace this with an actual secret\n    secure: process.env.ENV === 'prod', // enable this in prod only\n  },\n});\n\n// you can also export the methods individually for your own usage\nexport let { getSession, commitSession, destroySession } = sessionStorage;\n", "import { DynamoDBClient } from '@aws-sdk/client-dynamodb';\nexport const dbClient = new DynamoDBClient({ region: 'ap-southeast-2' });\n", "import { dbClient } from '~/clients/dynamodb';\nimport { marshall, unmarshall } from '@aws-sdk/util-dynamodb';\nimport type {\n  PutItemCommandInput,\n  GetItemCommandInput,\n  UpdateItemCommandInput,\n} from '@aws-sdk/client-dynamodb';\nimport {\n  PutItemCommand,\n  ReturnValue,\n  GetItemCommand,\n  UpdateItemCommand,\n} from '@aws-sdk/client-dynamodb';\nimport { composeIdForUser } from './utils';\nimport { Team, User } from '~/types/user';\nimport bcrypt from 'bcryptjs';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\ndayjs.extend(utc);\ninterface DBUser extends User {\n  password: string;\n}\nconst _isAdminUserExist = async (): Promise<boolean> => {\n  const params: GetItemCommandInput = {\n    TableName: process.env.USER_TABLE,\n    Key: marshall({\n      PK: 'TEAM',\n      SK: 'USER-pttdev123@gmail.com',\n    }),\n  };\n  const { Item } = await dbClient.send(new GetItemCommand(params));\n  return Boolean(Item);\n};\nconst _createAdminUser = async () => {\n  const adminUser: DBUser = {\n    username: 'Terry Pan',\n    password: '0987654321',\n    team: Team.TEAM0001,\n    origin_lang: 'ZH',\n    target_lang: 'EN',\n    roles: ['Admin'],\n    email: 'pttdev123@gmail.com',\n    first_login: true,\n  };\n  await createNewUser(adminUser);\n};\n\nexport const onlyCreateAdminUserWhenFirstSystemUp = async (): Promise<void> => {\n  const isAdminExist = await _isAdminUserExist();\n  if (!isAdminExist) {\n    await _createAdminUser();\n  }\n};\n\nexport const getUserByEmail = async (email: string): Promise<DBUser | undefined> => {\n  const SK = composeIdForUser({ email });\n  const params: GetItemCommandInput = {\n    TableName: process.env.USER_TABLE,\n    Key: marshall({\n      PK: 'TEAM',\n      SK,\n    }),\n  };\n  const { Item } = await dbClient.send(new GetItemCommand(params));\n  if (Item) {\n    return unmarshall(Item) as DBUser;\n  }\n  return undefined;\n};\n\nexport const updateUserPassword = async ({\n  email,\n  password,\n}: {\n  email: string;\n  password: string;\n}) => {\n  console.log(`caller name`, updateUserPassword.caller);\n  const SK = composeIdForUser({ email });\n  const salt = await bcrypt.genSalt(15);\n  const hashedPassword = await bcrypt.hash(password, salt);\n  const params: UpdateItemCommandInput = {\n    TableName: process.env.USER_TABLE,\n    Key: marshall({\n      PK: 'TEAM',\n      SK,\n    }),\n    ConditionExpression: 'attribute_exists(#SK)',\n    ExpressionAttributeNames: {\n      '#SK': 'SK',\n      '#password': 'password',\n    },\n    ExpressionAttributeValues: marshall({\n      ':password': hashedPassword,\n      ':first_login': false,\n    }),\n    UpdateExpression: 'Set #password = :password, first_login = :first_login',\n  };\n\n  await dbClient.send(new UpdateItemCommand(params));\n};\n\nexport const createNewUser = async (user: DBUser) => {\n  const {\n    password,\n    email,\n    createdAt = dayjs.utc().format(),\n    createdBy = 'Admin',\n    updatedAt = dayjs.utc().format(),\n    updatedBy = 'Admin',\n    ...rest\n  } = user;\n  const salt = await bcrypt.genSalt(15);\n  const hashedPassword = await bcrypt.hash(password, salt);\n  const sortKey = composeIdForUser({ email: email });\n  const params: PutItemCommandInput = {\n    TableName: process.env.USER_TABLE,\n    Item: marshall({\n      PK: 'TEAM',\n      SK: sortKey,\n      email,\n      password: hashedPassword,\n      createdAt,\n      createdBy,\n      updatedAt,\n      updatedBy,\n      ...rest,\n    }),\n    ConditionExpression: 'attribute_not_exists(#SK)',\n    ExpressionAttributeNames: {\n      '#SK': 'SK',\n    },\n    ReturnValues: ReturnValue.ALL_OLD,\n  };\n  const results = await dbClient.send(new PutItemCommand(params));\n  return results;\n};\n", "import { dbClient } from '~/clients/dynamodb';\nimport { marshall, unmarshall } from '@aws-sdk/util-dynamodb';\nimport type {\n  UpdateItemCommandInput,\n  GetItemCommandInput,\n  PutItemCommandInput,\n} from '@aws-sdk/client-dynamodb';\nimport {\n  UpdateItemCommand,\n  ReturnValue,\n  GetItemCommand,\n  PutItemCommand,\n} from '@aws-sdk/client-dynamodb';\n\ntype CounterType = 'USER' | 'TEAM' | 'ROLE' | 'LANG';\n\nconst _createCounterFor = async (type: CounterType): Promise<{ counter: number }> => {\n  const params: PutItemCommandInput = {\n    TableName: process.env.USER_TABLE,\n    Item: marshall({\n      PK: 'TEAM',\n      SK: `${type}-COUNTER`,\n      counter: 0,\n    }),\n  };\n  await dbClient.send(new PutItemCommand(params));\n  return { counter: 0 };\n};\n\nconst _updateCounterFor = async (\n  type: CounterType,\n  counter: number\n): Promise<{ counter: number }> => {\n  const params: UpdateItemCommandInput = {\n    TableName: process.env.USER_TABLE,\n    Key: marshall({\n      PK: 'TEAM',\n      SK: `${type}-COUNTER`,\n    }),\n    ExpressionAttributeNames: {\n      '#counter': 'counter',\n    },\n    ExpressionAttributeValues: marshall({\n      ':val': 1,\n      ':counter': counter,\n    }),\n    // using opmistic locking\n    // https://dynobase.dev/dynamodb-locking/\n    ConditionExpression: '#counter = :counter',\n    UpdateExpression: 'set #counter = #counter + :val',\n    ReturnValues: ReturnValue.ALL_NEW,\n  };\n  const { Attributes } = await dbClient.send(new UpdateItemCommand(params));\n  if (Attributes) {\n    return unmarshall(Attributes) as { counter: number };\n  }\n  throw new Error('update user counter failed');\n};\n\n/**\n * This is a helper function, which will calculate and return the most recent counter\n * which can be used as a user | team | lang | role id\n * @returns the latest user id\n */\nexport const getCounterFor = async (type: CounterType): Promise<{ counter: number }> => {\n  const params: GetItemCommandInput = {\n    TableName: process.env.USER_TABLE,\n    Key: marshall({\n      PK: 'TEAM',\n      SK: `${type}-COUNTER`,\n    }),\n  };\n  const { Item } = await dbClient.send(new GetItemCommand(params));\n  if (Item) {\n    const { counter } = unmarshall(Item) as { counter: number };\n    await _updateCounterFor(type, counter);\n    return { counter: counter + 1 };\n  }\n  return _createCounterFor(type);\n};\n\n/**\n * By given a type and id, this helper function is going to create a padding id, like 0001, 0002\n * @param param0\n * @returns\n */\nexport const composeIdFor = ({ type, id }: { type: CounterType; id: number }) => {\n  return `${type}-${id.toString().padStart(4, '0')}`;\n};\n\n/**\n * The composed user id can be used as SK in user table\n * @param id the user id\n * @returns composed user id\n */\nexport const composeIdForUser = ({ email }: { email: string }) => {\n  return `USER-${email}`;\n};\n", "export const roles = ['Admin', 'Leader', 'Editor', 'Viewer'] as const;\nexport const langs = ['ZH', 'EN'] as const;\ntype RoleTuple = typeof roles;\ntype LangTuple = typeof langs;\nexport type Role = RoleTuple[number];\ninterface CommonMeta {\n  createdAt?: string;\n  createdBy?: string;\n  updatedAt?: string;\n  updatedBy?: string;\n}\nexport type Lang = LangTuple[number];\nexport enum Team {\n  TEAM0001 = 'Master Sure',\n  TEAM0002 = 'Master Chi',\n}\nexport interface User extends CommonMeta {\n  username: string;\n  email: string;\n  roles: Role[];\n  team: Team;\n  origin_lang: Lang;\n  target_lang: Lang;\n  first_login: boolean;\n}\n", "import { Box, Flex, SkeletonCircle, SkeletonText } from '@chakra-ui/react';\nimport { json, LoaderArgs, redirect } from '@remix-run/node';\nimport { Outlet, useLoaderData, useTransition } from '@remix-run/react';\nimport { assertAuthUser } from '~/auth.server';\nimport { Sidebar } from '~/components/common/sidebar';\nimport { createContext } from 'react';\nimport { Team, User } from '~/types/user';\nimport { defineAbilityFor } from '~/authorisation';\nimport { AbilityContext } from '~/authorisation';\nexport const loader = async ({ request }: LoaderArgs) => {\n  const user = await assertAuthUser(request);\n  return json(user);\n};\nexport const UserContext = createContext<User | undefined>({\n  username: '',\n  email: 'admin@gmail.com',\n  roles: ['Viewer'],\n  origin_lang: 'ZH',\n  target_lang: 'EN',\n  team: Team.TEAM0001,\n  first_login: false,\n});\nexport default function AppRoute() {\n  const user = useLoaderData<typeof loader>();\n  const ability = defineAbilityFor(user);\n  return (\n    <AbilityContext.Provider value={ability}>\n      <UserContext.Provider value={user ? user : undefined}>\n        <Flex>\n          <Sidebar />\n          <Outlet />\n        </Flex>\n      </UserContext.Provider>\n    </AbilityContext.Provider>\n  );\n}\n", "import {\n  Avatar,\n  Divider,\n  Flex,\n  Heading,\n  IconButton,\n  Text,\n  useBoolean,\n  VStack,\n  Icon,\n  HStack,\n  Box,\n  useTheme,\n} from '@chakra-ui/react';\nimport { ArrowLeftIcon, ArrowRightIcon } from '@chakra-ui/icons';\nimport { NavLink } from '@remix-run/react';\nimport { FiHome } from 'react-icons/fi';\nimport { AiOutlineBook, AiOutlineTranslation, AiOutlineSetting } from 'react-icons/ai';\nimport { Can } from '~/authorisation';\nexport const Sidebar = () => {\n  const [toggle, setToggle] = useBoolean(true);\n  const {\n    colors: { primary, secondary },\n  } = useTheme();\n  const activeLinkColor = {\n    color: primary[300],\n  };\n  const nonActiveLinkColor = {\n    color: secondary[500],\n  };\n  if (toggle) {\n    return (\n      <Box w=\"250px\" background=\"primary.800\">\n        <Flex\n          px=\"5%\"\n          pos={'sticky'}\n          top=\"0\"\n          left=\"0\"\n          h=\"100vh\"\n          w=\"250px\"\n          flexDir=\"column\"\n          justifyContent=\"space-between\"\n          boxShadow=\"0 4px 12px 0 rgba(0, 0, 0, 0.05)\"\n        >\n          <VStack spacing={4}>\n            {/* Logo section */}\n            <VStack pt={6} w=\"100%\">\n              <NavLink to=\".\" style={{ textAlign: 'center', marginBottom: '0.2rem' }}>\n                <Text as=\"b\" fontSize={'3xl'} color={'secondary.300'}>\n                  Kum\u0101raj\u012Bva\n                </Text>\n              </NavLink>\n              <Divider borderColor=\"primary.300\" />\n            </VStack>\n            {/* menu section */}\n            <Flex w=\"70%\" flexDir={'column'} justifyContent={'space-between'}>\n              <Box\n                px={6}\n                py={2}\n                _hover={{\n                  color: 'secondary.500',\n                  background: 'whiteAlpha.300',\n                  borderRadius: 8,\n                }}\n              >\n                <NavLink\n                  to=\"dashboard\"\n                  style={({ isActive }) => (isActive ? activeLinkColor : nonActiveLinkColor)}\n                >\n                  <HStack justifyContent={'flex-start'}>\n                    <Icon as={FiHome} />\n                    <Text as=\"b\">Home</Text>\n                  </HStack>\n                </NavLink>\n              </Box>\n              <Box\n                px={6}\n                py={2}\n                _hover={{\n                  color: 'secondary.500',\n                  background: 'whiteAlpha.300',\n                  borderRadius: 8,\n                }}\n              >\n                <NavLink\n                  to=\"tripitaka\"\n                  style={({ isActive }) => (isActive ? activeLinkColor : nonActiveLinkColor)}\n                >\n                  <HStack justifyContent={'flex-start'}>\n                    <Icon as={AiOutlineBook} />\n                    <Text as=\"b\">Sutra</Text>\n                  </HStack>\n                </NavLink>\n              </Box>\n              <Box\n                px={6}\n                py={2}\n                _hover={{\n                  color: 'secondary.500',\n                  background: 'whiteAlpha.300',\n                  borderRadius: 8,\n                }}\n              >\n                <NavLink\n                  to=\"translation\"\n                  style={({ isActive }) => (isActive ? activeLinkColor : nonActiveLinkColor)}\n                >\n                  <HStack justifyContent={'flex-start'}>\n                    <Icon as={AiOutlineTranslation} />\n                    <Text as=\"b\">Translation</Text>\n                  </HStack>\n                </NavLink>\n              </Box>\n              <Can I=\"Read\" this=\"Administration\">\n                <Box\n                  px={6}\n                  py={2}\n                  _hover={{\n                    color: 'secondary.500',\n                    background: 'whiteAlpha.300',\n                    borderRadius: 8,\n                  }}\n                >\n                  <NavLink\n                    to=\"admin\"\n                    style={({ isActive }) => (isActive ? activeLinkColor : nonActiveLinkColor)}\n                  >\n                    <HStack justifyContent={'flex-start'}>\n                      <Icon as={AiOutlineSetting} />\n                      <Text as=\"b\">Admin</Text>\n                    </HStack>\n                  </NavLink>\n                </Box>\n              </Can>\n            </Flex>\n          </VStack>\n          {/* user profile section */}\n          <Flex flexDir=\"column\" w=\"100%\" alignItems=\"center\" mb={4}>\n            <Divider borderColor={'primary.300'} />\n            <Flex mt={4} alignItems=\"center\" flexDir=\"row\" justifyContent=\"space-between\">\n              <Avatar size=\"sm\" name=\"Terry Pan\" src=\"https://bit.ly/broken-link\" />\n              <Flex flexDir=\"column\" ml={4}>\n                <NavLink to=\"setting\">\n                  <Heading as=\"h3\" size=\"sm\" color=\"secondary.500\">\n                    Terry Pan\n                  </Heading>\n                  <Text color=\"secondary.500\">Admin</Text>\n                </NavLink>\n              </Flex>\n              <IconButton\n                background=\"none\"\n                _hover={{ background: 'none' }}\n                aria-label=\"menu-bar\"\n                icon={<ArrowLeftIcon />}\n                onClick={setToggle.toggle}\n              />\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  } else {\n    return (\n      <IconButton\n        pos=\"fixed\"\n        bottom={8}\n        left={8}\n        w={12}\n        h={12}\n        aria-label=\"sidebar-menu-button\"\n        isRound\n        icon={<ArrowRightIcon />}\n        onClick={setToggle.toggle}\n      />\n    );\n  }\n};\n", "import { AbilityBuilder, PureAbility } from '@casl/ability';\nimport { User } from '~/types/user';\n\ntype Actions = 'Create' | 'Read' | 'Update' | 'Delete';\ntype Subjects = 'Administration' | 'Sutra';\n\nexport const defineAbilityFor = (user: User) => {\n  const { can, cannot, build } = new AbilityBuilder(PureAbility<[Actions, Subjects]>);\n  if (user.roles.includes('Admin')) {\n    can('Read', 'Administration');\n    can('Create', 'Sutra');\n  }\n  return build();\n};\n", "import { createContext } from 'react';\nimport { createContextualCan } from '@casl/react';\nimport { AnyAbility } from '@casl/ability';\n\n// @ts-ignore\nexport const AbilityContext = createContext<AnyAbility>(null);\nexport const Can = createContextualCan(AbilityContext.Consumer);\n", "import { Flex, Divider } from '@chakra-ui/react';\nimport { json, LoaderArgs } from '@remix-run/node';\nimport { Outlet } from '@remix-run/react';\nimport { assertAuthUser } from '~/auth.server';\nimport { BreadCrumb } from '~/components/common';\nexport default function TranslationRoute() {\n  return (\n    <Flex p={10} background=\"secondary.800\" w=\"100%\" flexDir=\"column\">\n      <BreadCrumb />\n      <Divider mt={4} mb={4} borderColor={'primary.300'} />\n      <Outlet />\n    </Flex>\n  );\n}\n", "import {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from '@chakra-ui/react';\n\ninterface CommonModalProps {\n  header: string;\n  body: React.ReactNode;\n  modalSize?: string;\n  isOpen: boolean;\n  onClose: () => void;\n}\nexport const CommonModal = (props: CommonModalProps) => {\n  const { header, body, modalSize, isOpen, onClose } = props;\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} size={modalSize ?? '2xl'}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>{header}</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody pb={6}>{body}</ModalBody>\n\n        <ModalFooter>\n          <Button colorScheme=\"iconButton\" mr={3}>\n            Save\n          </Button>\n          <Button onClick={onClose}>Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\ninterface FormModalProps {\n  header: string;\n  body: React.ReactNode;\n  modalSize?: string;\n  isOpen: boolean;\n  onClose: () => void;\n  name: string;\n}\nexport const FormModal = (props: FormModalProps) => {\n  const { header, body, modalSize, isOpen, onClose, name } = props;\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} size={modalSize ?? '2xl'}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>{header}</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody pb={6}>{body}</ModalBody>\n\n        <ModalFooter>\n          <Button colorScheme=\"iconButton\" mr={3} type=\"submit\" name={name}>\n            Save\n          </Button>\n          <Button onClick={onClose}>Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n", "import {\n  Breadcrumb,\n  BreadcrumbItem,\n  Flex,\n  LinkOverlay,\n  LinkBox,\n  Text,\n  Box,\n} from '@chakra-ui/react';\nimport { ChevronRightIcon } from '@chakra-ui/icons';\nimport { useLocation, Link } from '@remix-run/react';\nexport const BreadCrumb = () => {\n  const location = useLocation();\n  const tempPath = location?.pathname;\n  const names = ['TRIPITAKA', 'SUTRA', 'ROLL', 'STAGING'];\n\n  const breadcrumbComp = tempPath\n    .split('/')\n    .filter(Boolean)\n    .map((_, index, arr) => {\n      const href = `/${arr.slice(0, index + 1).join('/')}`;\n      return (\n        <BreadcrumbItem key={href}>\n          <LinkBox as={'article'}>\n            <Link to={href}>\n              <Text as=\"b\">{names[index]}</Text>\n            </Link>\n          </LinkBox>\n        </BreadcrumbItem>\n      );\n    });\n\n  return (\n    <Flex>\n      <Breadcrumb spacing={2} separator={<ChevronRightIcon color=\"gray.500\" />}>\n        {breadcrumbComp}\n      </Breadcrumb>\n    </Flex>\n  );\n};\n", "import type { MutableRefObject } from 'react';\nimport { Text, Flex, Checkbox, useBoolean, Tooltip, Box } from '@chakra-ui/react';\nexport const Paragraph = ({\n  origin,\n  target,\n  index,\n  disabled,\n  checkedParagraphs,\n  finish,\n  footnotes,\n}: {\n  origin: string;\n  target: string;\n  index: number;\n  disabled: boolean;\n  checkedParagraphs: MutableRefObject<Set<number>>;\n  finish: boolean;\n  footnotes: {\n    offset: number;\n    content: string;\n    num: number;\n    paragraphId: string;\n  }[];\n}) => {\n  const [toggle, setToggle] = useBoolean(false);\n  if (toggle) {\n    checkedParagraphs.current.add(index);\n  } else {\n    checkedParagraphs.current.delete(index);\n  }\n\n  const textWithFootNote = footnotes.length\n    ? footnotes.map((footnote, index, arr) => {\n        const { num, offset, content } = footnote;\n        const nextOffset = arr[index + 1]?.offset ?? -1;\n        return (\n          <span key={num}>\n            <Text as=\"span\">{origin.slice(0, offset)}</Text>\n            <Tooltip label={content} aria-label=\"footnote tooltip\">\n              <span style={{ paddingLeft: 4, paddingRight: 4, color: 'blue' }}>[{num}]</span>\n            </Tooltip>\n            <Text as=\"span\">{origin.slice(offset, nextOffset)}</Text>\n          </span>\n        );\n      })\n    : origin;\n  return (\n    <Flex w={finish ? '50%' : '90%'} flexDir={'row'} alignItems={'flex-start'}>\n      {finish ? (\n        <Flex\n          background={toggle ? 'primary.300' : 'inherit'}\n          pl={4}\n          borderRadius={toggle ? 12 : 0}\n          flexDir={'row'}\n          gap={8}\n        >\n          <Text fontSize={'xl'}>{textWithFootNote}</Text>\n        </Flex>\n      ) : (\n        <Checkbox borderColor={'primary.300'} onChange={setToggle.toggle} disabled={disabled}>\n          <Flex\n            background={toggle ? 'primary.300' : 'inherit'}\n            pl={4}\n            borderRadius={toggle ? 12 : 0}\n            flexDir={'row'}\n            gap={8}\n          >\n            <Text\n              flex={1}\n              color={toggle ? 'white' : 'inherit'}\n              lineHeight={1.8}\n              fontSize={'xl'}\n              fontFamily=\"Noto Sans TC\"\n            >\n              {origin}\n            </Text>\n            {target ? (\n              <Text\n                flex={1}\n                color={toggle ? 'white' : 'inherit'}\n                lineHeight={1.8}\n                fontSize={'xl'}\n                fontFamily=\"Noto Sans TC\"\n              >\n                {target}\n              </Text>\n            ) : null}\n          </Flex>\n        </Checkbox>\n      )}\n    </Flex>\n  );\n};\n", "import {\n  LinkBox,\n  Card,\n  CardBody,\n  CardHeader,\n  Badge,\n  Heading,\n  Text,\n  LinkOverlay,\n  CardFooter,\n} from '@chakra-ui/react';\nimport { Link } from '@remix-run/react';\ninterface SutraProps {\n  slug: string;\n  category: string;\n  title: string;\n  translator: string;\n}\nexport function Sutra(props: SutraProps) {\n  const { slug, category, title, translator } = props;\n  return (\n    <LinkBox as=\"article\" key={slug}>\n      <Card\n        background=\"secondary.500\"\n        w={300}\n        h={250}\n        borderRadius={12}\n        boxShadow=\"0 12px 12px 0 rgba(0, 0, 0, 0.05)\"\n      >\n        <CardHeader>\n          <Heading size=\"lg\">\n            <Badge colorScheme=\"green\" variant=\"solid\">\n              <Text fontSize={'md'}>{category}</Text>\n            </Badge>\n          </Heading>\n        </CardHeader>\n        <CardBody>\n          <LinkOverlay as={Link} to={slug}>\n            <Text as=\"b\" fontSize=\"3xl\">\n              {title}\n            </Text>\n          </LinkOverlay>\n        </CardBody>\n        <CardFooter>\n          <Text>{translator}</Text>\n        </CardFooter>\n      </Card>\n    </LinkBox>\n  );\n}\n", "import { json, LoaderArgs } from '@remix-run/node';\nimport { useLoaderData, useLocation, useNavigate } from '@remix-run/react';\nimport { Text, IconButton, Flex, Checkbox, useBoolean } from '@chakra-ui/react';\nimport { useRef } from 'react';\nimport type { MutableRefObject } from 'react';\nimport { FiEdit } from 'react-icons/fi';\nimport { Paragraph } from '~/components/common/paragraph';\n\nexport const loader = async ({ params }: LoaderArgs) => {\n  return json({\n    footnotes: [\n      {\n        paragraphId: '0001',\n        offset: 10,\n        num: 1,\n        content: 'Etiam porttitor. Class aptent. Nulla facilisi.',\n      },\n      {\n        paragraphId: '0001',\n        offset: 80,\n        num: 2,\n        content: 'Etiam porttitor. Class aptent. Nulla facilisi.',\n      },\n      {\n        paragraphId: '0001',\n        offset: 140,\n        num: 3,\n        content: 'Etiam porttitor. Class aptent. Nulla facilisi.',\n      },\n      {\n        paragraphId: '0002',\n        offset: 20,\n        num: 4,\n        content: 'Donec non. :Praesent malesuada. Curabitur rutrum.',\n      },\n      {\n        paragraphId: '0003',\n        offset: 20,\n        num: 5,\n        content: 'Donec non. :Praesent malesuada. Curabitur rutrum.',\n      },\n    ],\n    paragraphs: [\n      {\n        finish: true,\n        num: '0001',\n        content:\n          'Aliquam commodo fringilla neque, sit amet condimentum risus commodo in. Quisque porta mi arcu, eget condimentum nunc mollis ac. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Sed ut cursus nulla. Curabitur ut nunc in est sollicitudin feugiat non at odio. Nullam in accumsan purus, non congue risus. Suspendisse hendrerit non eros ac mattis. Maecenas ornare pellentesque augue non venenatis. Sed tincidunt blandit nibh vel rhoncus. Etiam vitae sagittis risus. Praesent in nisl urna. Suspendisse pharetra eros ut diam malesuada gravida. Aliquam ornare scelerisque enim, sit amet ultricies urna consectetur non. Maecenas in odio malesuada, sagittis erat a, suscipit eros. Proin sodales rhoncus metus, sed placerat ipsum consequat a. Nam quis accumsan arcu. Quisque egestas fringilla lectus, interdum vehicula quam porta ac. Integer magna ligula, porta quis elementum eget, ornare ac purus. Duis lobortis euismod neque sed pellentesque.',\n      },\n      {\n        finish: true,\n        num: '0002',\n        content:\n          'Nam et pharetra ex. Quisque faucibus sed erat ut auctor. Nulla molestie maximus purus sit amet ornare. Duis vitae ex sollicitudin, tincidunt mi sit amet, mattis nunc. Proin interdum ipsum nec eros consequat mattis. Proin odio mauris, iaculis id diam sit amet, tristique pulvinar turpis. Curabitur eu cursus risus, quis placerat dolor. Vivamus erat massa, sodales sit amet risus et, pellentesque mattis ex.',\n      },\n      {\n        finish: true,\n        num: '0003',\n        content:\n          'Pellentesque finibus eget augue et semper. Vivamus cursus mauris ac ligula pulvinar, non viverra metus imperdiet. Sed interdum ipsum id gravida lacinia. Curabitur vel diam ut ex blandit elementum. Donec euismod interdum sollicitudin. Maecenas sit amet aliquet urna. Vestibulum elementum faucibus condimentum.',\n      },\n    ],\n  });\n};\nexport default function RollRoute() {\n  const { paragraphs, footnotes } = useLoaderData<typeof loader>();\n  const navigate = useNavigate();\n  const checkedParagraphs = useRef(new Set<number>());\n  const paragraphsComp = paragraphs.map((paragraph, index) => (\n    <Paragraph\n      key={paragraph.num}\n      origin={paragraph.content}\n      target={''}\n      index={index}\n      checkedParagraphs={checkedParagraphs}\n      disabled={paragraph.finish}\n      finish={paragraph.finish}\n      footnotes={footnotes.filter(({ paragraphId }) => paragraphId === paragraph.num)}\n    />\n  ));\n  if (paragraphs.length) {\n    return (\n      <Flex\n        w=\"100%\"\n        flexDir=\"column\"\n        justifyContent=\"flex-start\"\n        alignItems=\"center\"\n        gap={4}\n        mt={10}\n      >\n        {paragraphsComp}\n        {footnotes.length ? (\n          <Flex flexDir={'column'} justifyContent=\"flex-start\" w=\"48%\">\n            {footnotes.map((footnote) => {\n              return (\n                <Text key={footnote.num} fontSize={'lg'}>\n                  [{footnote.num}]{footnote.content}\n                </Text>\n              );\n            })}\n          </Flex>\n        ) : null}\n      </Flex>\n    );\n  }\n  return <div>Roll</div>;\n}\n", "import { json, LoaderArgs } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { Box, Flex } from '@chakra-ui/react';\nimport { Roll } from '~/components/common/roll';\n\nexport const loader = async ({ params }: LoaderArgs) => {\n  const { sutraId } = params;\n  switch (sutraId) {\n    case 'EN-SUTRA-V1-0001':\n      return json({\n        rolls: [\n          {\n            title: 'Chapter One: Wondrous Adornments of World-Rulers',\n            slug: 'EN-ROLL-V1-0001',\n            roll_num: 'Roll one',\n            finish: true,\n          },\n          {\n            title: 'Chapter One: Wondrous Adornments of World-Rulers',\n            slug: 'EN-ROLL-V1-0002',\n            roll_num: 'Roll two',\n            finish: true,\n          },\n        ],\n      });\n    case 'EN-SUTRA-V1-0002':\n      return json({\n        rolls: [\n          {\n            title: 'Chapter One: Wondrous Adornments of World-Rulers',\n            slug: 'EN-ROLL-V1-0001',\n            roll_num: 'Roll one',\n            finish: true,\n          },\n          {\n            title: 'Chapter One: Wondrous Adornments of World-Rulers',\n            slug: 'EN-ROLL-V1-0002',\n            roll_num: 'Roll two',\n            finish: true,\n          },\n        ],\n      });\n    case 'EN-SUTRA-V1-0003':\n      return json({\n        rolls: [\n          {\n            title: 'Chapter One: Wondrous Adornments of World-Rulers',\n            slug: 'EN-ROLL-V1-0001',\n            roll_num: 'Roll one',\n            finish: true,\n          },\n          {\n            title: 'Chapter One: Wondrous Adornments of World-Rulers',\n            slug: 'EN-ROLL-V1-0002',\n            roll_num: 'Roll two',\n            finish: true,\n          },\n        ],\n      });\n    default:\n      throw new Error('We dont support this yet');\n  }\n};\nexport default function SutraSlug() {\n  const { rolls } = useLoaderData<typeof loader>();\n  const rollsComp = rolls.map((roll) => <Roll key={roll.slug} {...roll} />);\n  if (rolls.length) {\n    return (\n      <Box p={10}>\n        <Flex gap={8}>{rollsComp}</Flex>\n      </Box>\n    );\n  } else {\n    return <Box>No roll for this sutra</Box>;\n  }\n}\n", "import { LinkBox, Card, CardHeader, CardBody, Heading, LinkOverlay, Text } from '@chakra-ui/react';\nimport { Link } from '@remix-run/react';\ninterface RollProps {\n  slug: string;\n  roll_num: string;\n  title: string;\n}\nexport function Roll(props: RollProps) {\n  const { slug, roll_num, title } = props;\n  return (\n    <LinkBox as=\"article\" key={slug}>\n      <Card\n        background=\"secondary.500\"\n        w={200}\n        borderRadius={12}\n        boxShadow=\"0 12px 12px 0 rgba(0, 0, 0, 0.05)\"\n      >\n        <CardHeader>\n          <Heading size=\"lg\">{roll_num}</Heading>\n        </CardHeader>\n        <CardBody>\n          <LinkOverlay as={Link} to={slug}>\n            <Text>{title}</Text>\n          </LinkOverlay>\n        </CardBody>\n      </Card>\n    </LinkBox>\n  );\n}\n", "import { Box, Flex } from '@chakra-ui/react';\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { Sutra } from '~/components/common/sutra';\n\nexport const loader = async () => {\n  return json({\n    sutras: [\n      {\n        slug: 'EN-SUTRA-V1-0001',\n        title: 'Avatamsaka',\n        category: 'Avatamsaka',\n        roll_count: 80,\n        num_chars: 593144,\n        translator: 'Translated by Shikonanda, Tang Dynasty',\n        dynasty: 'Tang',\n        time_from: 695,\n        time_to: 699,\n      },\n      {\n        slug: 'EN-SUTRA-V1-0002',\n        title: 'The Lotus Sutra',\n        category: 'Avatamsaka',\n        roll_count: 80,\n        num_chars: 593144,\n        translator: 'Translated by Shikonanda, Tang Dynasty',\n        dynasty: 'Tang',\n        time_from: 695,\n        time_to: 699,\n      },\n      {\n        slug: 'EN-SUTRA-V1-0003',\n        title: 'Diamond Sutra',\n        category: 'Avatamsaka',\n        roll_count: 80,\n        num_chars: 593144,\n        translator: 'Translated by Shikonanda, Tang Dynasty',\n        dynasty: 'Tang',\n        time_from: 695,\n        time_to: 699,\n      },\n    ],\n  });\n};\nexport default function TripitakaRoute() {\n  const { sutras } = useLoaderData<typeof loader>();\n  const sutraComp = sutras.map((sutra) => <Sutra key={sutra.slug} {...sutra} />);\n  return (\n    <Box p={10}>\n      <Flex gap={8}>{sutraComp}</Flex>\n    </Box>\n  );\n}\n", "import { Flex } from '@chakra-ui/react';\n\nexport default function TripitakaRoute() {\n  return (\n    <Flex p={10} background=\"secondary.800\" w=\"100%\" flexDir=\"column\">\n      Home\n    </Flex>\n  );\n}\n", "import { Flex, Divider } from '@chakra-ui/react';\nimport { json, LoaderArgs } from '@remix-run/node';\nimport { Outlet, useFetcher, useMatches, useTransition } from '@remix-run/react';\nimport { assertAuthUser } from '~/auth.server';\nimport { BreadCrumb } from '~/components/common/breadcrumb';\n\nexport default function TripitakaRoute() {\n  return (\n    <Flex p={10} background=\"secondary.800\" w=\"100%\" flexDir=\"column\">\n      <BreadCrumb />\n      <Divider mt={4} mb={4} borderColor={'primary.300'} />\n      <Outlet />\n    </Flex>\n  );\n}\n", "import { useLocation } from '@remix-run/react';\nimport {\n  Tag,\n  Box,\n  Flex,\n  Text,\n  VStack,\n  Card,\n  CardBody,\n  CardHeader,\n  Heading,\n  ButtonGroup,\n  IconButton,\n  Textarea,\n  CardFooter,\n  Divider,\n  Button,\n  Tooltip,\n  useBoolean,\n  HStack,\n  Input,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  ModalFooter,\n  InputGroup,\n  InputLeftElement,\n} from '@chakra-ui/react';\nimport { RepeatIcon, CopyIcon, SearchIcon } from '@chakra-ui/icons';\nimport { useState, useRef } from 'react';\nimport { json } from '@remix-run/node';\nimport { BiTable, BiSearch, BiNote, BiCheck } from 'react-icons/bi';\nimport { Warning } from '~/components/common/errors';\n\nexport const loader = async () => {\n  return json({});\n};\n\ninterface stateType {\n  paragraphs: {\n    num: string;\n    origin: string;\n  }[];\n}\nexport default function StagingRoute() {\n  const location = useLocation();\n  const paragraphs = (location.state as stateType)?.paragraphs;\n  const paragraphsComp = paragraphs?.map((paragraph, index, arr) => (\n    <Box key={index}>\n      <TranlationWorkspace\n        origin={paragraph.origin}\n        translation=\"Mauris nisi lectus, bibendum id cursus auctor, aliquet sit amet ante. Pellentesque id libero urna. Cras egestas dolor sed fringilla imperdiet. Donec pellentesque lacus non libero euismod interdum. Sed placerat cursus nisl. Duis nec erat feugiat, accumsan quam et, ullamcorper purus. Integer ac molestie ex, eu egestas sapien. Duis maximus viverra urna a consectetur. Praesent rutrum tortor a euismod venenatis.\"\n        reference=\"Quisque gravida quis sapien sit amet auctor. In hac habitasse platea dictumst. Pellentesque in viverra risus, et pharetra sapien. Sed facilisis orci rhoncus erat ultricies, nec tempor sapien accumsan. Vivamus vel lectus ut mi ornare consectetur eget non nisl. Mauris rutrum dui augue, a sollicitudin risus elementum facilisis. Sed blandit lectus quam, dictum congue turpis venenatis vel. Integer rhoncus luctus consectetur.\"\n      />\n      {index !== arr.length - 1 ? <Divider mt={4} mb={4} /> : null}\n    </Box>\n  ));\n  if (paragraphs?.length) {\n    return <Box p={8}>{paragraphsComp}</Box>;\n  } else {\n    return <Warning content=\"Please select at least one paragraph from the roll\" />;\n  }\n}\n\ninterface WorkSpaceProps {\n  origin: string;\n  translation: string;\n  reference: string;\n}\nfunction TranlationWorkspace({ origin, translation, reference }: WorkSpaceProps) {\n  const [content, setContent] = useState('');\n  const [glossary, setGlossary] = useBoolean(false);\n  const [note, setNote] = useState('');\n  const { isOpen: isOpenNote, onOpen: onOpenNote, onClose: onCloseNote } = useDisclosure();\n  const { isOpen: isOpenSearch, onOpen: onOpenSearch, onClose: onCloseSearch } = useDisclosure();\n  const {\n    isOpen: isOpenFootnote,\n    onOpen: onOpenFootnote,\n    onClose: onCloseFootnote,\n  } = useDisclosure();\n  const initialRef = useRef(null);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  const getCurrentCursorText = (): string | undefined => {\n    const cursorPos = textareaRef.current?.selectionStart;\n    if (cursorPos) {\n      const textBeforeCursor = content.slice(0, cursorPos - 1);\n      const textAfterCursor = content.slice(cursorPos + 1);\n      const indexBeforeCursor = textBeforeCursor.lastIndexOf(' ');\n      const indexAfterCursor = textAfterCursor.indexOf(' ');\n      const wordsCursorSitting = content.slice(\n        indexBeforeCursor >= 0 ? indexBeforeCursor : 0,\n        indexAfterCursor >= 0 ? indexAfterCursor + cursorPos : -1\n      );\n      return wordsCursorSitting;\n    }\n    return 'You forget to put your cursor in text';\n  };\n  return (\n    <Flex gap={4} flexDir=\"row\" justifyContent=\"space-between\">\n      <VStack flex={1} spacing={4}>\n        <Card background={'secondary.500'} borderRadius={12}>\n          <CardHeader>\n            <Heading size=\"sm\">Origin</Heading>\n          </CardHeader>\n          <CardBody>\n            <Text fontSize={'xl'}>{origin}</Text>\n          </CardBody>\n        </Card>\n        <Card background={'secondary.500'} borderRadius={12}>\n          <CardHeader as={Flex} justifyContent=\"space-between\" alignItems=\"center\">\n            <Heading size=\"sm\">DeepL</Heading>\n            <ButtonGroup variant=\"outline\" spacing=\"6\">\n              <IconButton icon={<RepeatIcon />} aria-label=\"refresh\" />\n              <IconButton\n                icon={<CopyIcon />}\n                aria-label=\"copy\"\n                onClick={() => setContent(translation)}\n              />\n            </ButtonGroup>\n          </CardHeader>\n          <CardBody>\n            <Text fontSize={'xl'}>{translation}</Text>\n          </CardBody>\n        </Card>\n        <Card background={'secondary.500'} borderRadius={12}>\n          <CardHeader as={Flex} justifyContent=\"space-between\" alignItems=\"center\">\n            <Heading size=\"sm\">Reference</Heading>\n            <ButtonGroup variant=\"outline\" spacing=\"6\">\n              <IconButton\n                icon={<CopyIcon />}\n                aria-label=\"copy\"\n                onClick={() => setContent(reference)}\n              />\n            </ButtonGroup>\n          </CardHeader>\n          <CardBody>\n            <Text fontSize={'xl'}>{reference}</Text>\n          </CardBody>\n        </Card>\n      </VStack>\n      <Flex flex={1} justifyContent=\"stretch\" alignSelf={'stretch'}>\n        <Card background={'secondary.500'} w=\"100%\" borderRadius={12}>\n          <CardHeader as={Flex} justifyContent=\"space-between\" alignItems=\"center\">\n            <Heading size=\"sm\">Workspace</Heading>\n          </CardHeader>\n          <CardBody>\n            <ButtonGroup colorScheme={'iconButton'} variant={'outline'} p={4} mb={2}>\n              <Tooltip label=\"open glossary\" openDelay={1000}>\n                <IconButton\n                  disabled={!Boolean(content)}\n                  onClick={setGlossary.on}\n                  icon={<BiTable />}\n                  aria-label=\"glossary button\"\n                />\n              </Tooltip>\n              <Tooltip label=\"add footnote\" openDelay={1000} closeDelay={1000}>\n                <IconButton\n                  disabled={!Boolean(content)}\n                  onClick={onOpenFootnote}\n                  icon={<BiNote />}\n                  aria-label=\"footnote button\"\n                />\n              </Tooltip>\n              <Tooltip label=\"open searchbar\" openDelay={1000}>\n                <IconButton onClick={onOpenSearch} icon={<BiSearch />} aria-label=\"search button\" />\n              </Tooltip>\n            </ButtonGroup>\n            <Modal isOpen={isOpenFootnote} onClose={onCloseFootnote} size=\"2xl\">\n              <ModalOverlay />\n              <ModalContent>\n                <ModalHeader>Add footnote</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody pb={6}>\n                  <Text>\n                    Your cursor is between\n                    <Tag>{getCurrentCursorText()}</Tag>\n                  </Text>\n                  <Text mb={8}>\n                    Make sure put your cursor at the correct location where you want to put footnote\n                  </Text>\n                  <Textarea\n                    _focus={{ outline: 'none' }}\n                    placeholder=\"glossary note\"\n                    onChange={(e) => {}}\n                  />\n                </ModalBody>\n\n                <ModalFooter>\n                  <Button colorScheme=\"iconButton\" mr={3}>\n                    Save\n                  </Button>\n                  <Button onClick={onCloseFootnote}>Cancel</Button>\n                </ModalFooter>\n              </ModalContent>\n            </Modal>\n            <Modal isOpen={isOpenSearch} onClose={onCloseSearch} size=\"2xl\">\n              <ModalOverlay />\n              <ModalContent>\n                <HStack>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents=\"none\"\n                      children={<SearchIcon color=\"gray.300\" />}\n                    />\n                    <Input\n                      _focus={{ outline: 'none' }}\n                      variant={'filled'}\n                      boxShadow=\"none\"\n                      size=\"lg\"\n                      type={'text'}\n                      placeholder=\"Search\"\n                    />\n                  </InputGroup>\n                </HStack>\n              </ModalContent>\n            </Modal>\n            {glossary ? (\n              <HStack mb={4}>\n                <InputGroup _focus={{ outline: 'none' }}>\n                  <Input type=\"text\" placeholder=\"origin\" mr={4} />\n                  <Input type=\"text\" placeholder=\"target\" />\n                </InputGroup>\n                <ButtonGroup colorScheme={'iconButton'} variant={'outline'}>\n                  <IconButton onClick={onOpenNote} icon={<BiNote />} aria-label=\"glossary note\" />\n                  <IconButton\n                    onClick={setGlossary.off}\n                    icon={<BiCheck />}\n                    aria-label=\"submit glossary\"\n                  />\n                </ButtonGroup>\n                <Modal initialFocusRef={initialRef} isOpen={isOpenNote} onClose={onCloseNote}>\n                  <ModalOverlay />\n                  <ModalContent>\n                    <ModalHeader>Add note to glossary</ModalHeader>\n                    <ModalCloseButton />\n                    <ModalBody pb={6}>\n                      <Textarea\n                        _focus={{ outline: 'none' }}\n                        placeholder=\"glossary note\"\n                        onChange={(e) => {}}\n                      />\n                    </ModalBody>\n\n                    <ModalFooter>\n                      <Button colorScheme=\"iconButton\" mr={3}>\n                        Save\n                      </Button>\n                      <Button onClick={onCloseNote}>Cancel</Button>\n                    </ModalFooter>\n                  </ModalContent>\n                </Modal>\n              </HStack>\n            ) : null}\n            <Textarea\n              ref={textareaRef}\n              height={glossary ? '82%' : '90%'}\n              placeholder=\"Here is a sample placeholder\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n            />\n          </CardBody>\n          <Divider />\n          <CardFooter>\n            <Button colorScheme={'iconButton'}>Submit</Button>\n          </CardFooter>\n        </Card>\n      </Flex>\n    </Flex>\n  );\n}\n", "import { Box, Flex, Heading, Text } from '@chakra-ui/react';\nimport { CloseIcon } from '@chakra-ui/icons';\nimport { ErrorPageProps } from '~/types/error';\n\nexport const Error = (props: ErrorPageProps) => {\n  const { heading, content } = props;\n  return (\n    <Box textAlign=\"center\" py={10} px={6}>\n      <Box display=\"inline-block\">\n        <Flex\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          bg={'red.500'}\n          rounded={'50px'}\n          w={'55px'}\n          h={'55px'}\n          textAlign=\"center\"\n        >\n          <CloseIcon boxSize={'20px'} color={'white'} />\n        </Flex>\n      </Box>\n      <Heading as=\"h2\" size=\"xl\" mt={6} mb={2}>\n        {heading ?? 'General Error'}\n      </Heading>\n      <Text color={'gray.500'}>{content}</Text>\n    </Box>\n  );\n};\n", "import { Box, Heading, Text } from '@chakra-ui/react';\nimport { InfoIcon } from '@chakra-ui/icons';\nimport { ErrorPageProps } from '~/types/error';\nexport const Info = (props: ErrorPageProps) => {\n  const { heading, content } = props;\n  return (\n    <Box textAlign=\"center\" py={10} px={6}>\n      <InfoIcon boxSize={'50px'} color={'blue.500'} />\n      <Heading as=\"h2\" size=\"xl\" mt={6} mb={2}>\n        {heading ?? 'General Info'}\n      </Heading>\n      <Text color={'gray.500'}>{content}</Text>\n    </Box>\n  );\n};\n", "import { Box, Heading, Text } from '@chakra-ui/react';\nimport { WarningTwoIcon } from '@chakra-ui/icons';\nimport { ErrorPageProps } from '~/types/error';\nexport const Warning = (props: ErrorPageProps) => {\n  const { heading, content } = props;\n  return (\n    <Box textAlign=\"center\" py={10} px={6}>\n      <WarningTwoIcon boxSize={'50px'} color={'orange.300'} />\n      <Heading as=\"h2\" size=\"xl\" mt={6} mb={2}>\n        {heading ?? 'General Warning'}\n      </Heading>\n      <Text color={'gray.500'}>{content}</Text>\n    </Box>\n  );\n};\n", "import { json, LoaderArgs } from '@remix-run/node';\nimport { useLoaderData, useLocation, useNavigate } from '@remix-run/react';\nimport { Text, IconButton, Flex, Checkbox, useBoolean } from '@chakra-ui/react';\nimport { useRef } from 'react';\nimport type { MutableRefObject } from 'react';\nimport { Paragraph } from '~/components/common/paragraph';\nimport { FiEdit } from 'react-icons/fi';\n\nexport const loader = async ({ params }: LoaderArgs) => {\n  return json({\n    footnotes: [],\n    paragraphs: [\n      {\n        num: '0001',\n        finish: true,\n        origin:\n          '\u84CB\u805E\uFF1A\u300C\u9020\u5316\u6B0A\u8F3F\u4E4B\u9996\uFF0C\u5929\u9053\u672A\u5206\uFF1B\u9F9C\u9F8D\u7E6B\u8C61\u4E4B\u521D\uFF0C\u4EBA\u6587\u59CB\u8457\u3002\u96D6\u842C\u516B\u5343\u6B72\uFF0C\u540C\u81E8\u6709\u622A\u4E4B\u5340\uFF1B\u4E03\u5341\u4E8C\u541B\uFF0C\u8A4E\u8B58\u7121\u908A\u4E4B\u7FA9\u3002\u300D\u7531\u662F\u4EBA\u8FF7\u56DB\u5FCD\uFF0C\u8F2A\u8FF4\u65BC\u516D\u8DA3\u4E4B\u4E2D\uFF1B\u5BB6\u7E8F\u4E94\u84CB\uFF0C\u6C92\u6EBA\u65BC\u4E09\u5857\u4E4B\u4E0B\u3002\u53CA\u592B\u9DF2\u5DD6\u897F\u5CD9\uFF0C\u8C61\u99D5\u6771\u9A45\uFF0C\u6167\u65E5\u6CD5\u738B\u8D85\u56DB\u5927\u800C\u9AD8\u8996\uFF0C\u4E2D\u5929\u8ABF\u5FA1\u8D8A\u5341\u5730\u4EE5\u5C45\u5C0A\uFF0C\u5305\u62EC\u9435\u570D\uFF0C\u5EF6\u4FC3\u6C99\u52AB\u3002\u5176\u70BA\u9AD4\u4E5F\uFF0C\u5247\u4E0D\u751F\u4E0D\u6EC5\uFF1B\u5176\u70BA\u76F8\u4E5F\uFF0C\u5247\u7121\u53BB\u7121\u4F86\u3002\u5FF5\u8655\u3001\u6B63\u52E4\uFF0C\u4E09\u5341\u4E03\u54C1\u70BA\u5176\u884C\uFF1B\u6148\u3001\u60B2\u3001\u559C\u3001\u6368\uFF0C\u56DB\u7121\u91CF\u6CD5\u904B\u5176\u5FC3\u3002\u65B9\u4FBF\u4E4B\u529B\u96E3\u601D\uFF0C\u5713\u5C0D\u4E4B\u6A5F\u591A\u7DD2\uFF0C\u6DF7\u5927\u7A7A\u800C\u70BA\u91CF\uFF0C\u8C48\u7B97\u6578\u4E4B\u80FD\u7AAE\uFF1F\u5165\u7E96\u82A5\u4E4B\u5FAE\u5340\uFF0C\u532A\u540D\u8A00\u4E4B\u53EF\u8FF0\uFF0C\u7121\u5F97\u800C\u7A31\u8005\uFF0C\u5176\u552F\u5927\u89BA\u6B5F\uFF01',\n        target:\n          'Aliquam commodo fringilla neque, sit amet condimentum risus commodo in. Quisque porta mi arcu, eget condimentum nunc mollis ac. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Sed ut cursus nulla. Curabitur ut nunc in est sollicitudin feugiat non at odio. Nullam in accumsan purus, non congue risus. Suspendisse hendrerit non eros ac mattis. Maecenas ornare pellentesque augue non venenatis. Sed tincidunt blandit nibh vel rhoncus. Etiam vitae sagittis risus. Praesent in nisl urna. Suspendisse pharetra eros ut diam malesuada gravida. Aliquam ornare scelerisque enim, sit amet ultricies urna consectetur non. Maecenas in odio malesuada, sagittis erat a, suscipit eros. Proin sodales rhoncus metus, sed placerat ipsum consequat a. Nam quis accumsan arcu. Quisque egestas fringilla lectus, interdum vehicula quam porta ac. Integer magna ligula, porta quis elementum eget, ornare ac purus. Duis lobortis euismod neque sed pellentesque.',\n      },\n      {\n        num: '0002',\n        finish: false,\n        origin:\n          '\u6715\u66E9\u52AB\u690D\u56E0\uFF0C\u53E8\u627F\u4F5B\u8A18\u3002\u91D1[4]\u4ED9\u964D\u65E8\uFF0C\u5927\u96F2\u4E4B\u5048\u5148\u5F70\uFF1B\u7389\u6246\u62AB\u7965\uFF0C\u5BF6\u96E8\u4E4B\u6587\u5F8C\u53CA\u3002\u52A0\u4EE5\u7A4D\u5584\u9918\u6176\uFF0C\u4FEF\u96C6\u5FAE\u8EAC\uFF0C\u9042\u5F97\u5730\u5E73\u5929\u6210\uFF0C\u6CB3\u6E05\u6D77\u664F\u3002\u6B8A\u798E\u7D55\u745E\uFF0C\u65E2\u65E5\u81F3\u800C\u6708\u66F8\uFF1B\u8C9D[5]\u7252\u9748\u6587\uFF0C\u4EA6\u6642\u81FB\u800C\u6B72\u6D3D\u3002\u903E\u6D77\u8D8A\u6F20\uFF0C\u737B\u8CDD\u4E4B\u79AE\u5099\u7109\uFF1B\u67B6\u96AA\u822A\u6DF1\uFF0C\u91CD\u8B6F\u4E4B[6]\u8FAD\u7F44\u77E3\u3002',\n        target: '',\n      },\n      {\n        num: '0003',\n        finish: false,\n        origin:\n          '\u300A\u5927\u65B9\u5EE3\u4F5B\u83EF\u56B4\u7D93\u300B\u8005\uFF0C\u65AF\u4E43\u8AF8\u4F5B\u4E4B\u5BC6\u85CF\uFF0C\u5982\u4F86\u4E4B\u6027\u6D77\u3002\u8996\u4E4B\u8005\uFF0C\u83AB\u8B58\u5176\u6307\u6B78\uFF1B\u6339\u4E4B\u8005\uFF0C\u7F55\u6E2C\u5176\u6DAF\u969B\u3002\u6709\u5B78\u3001\u7121\u5B78\uFF0C\u5FD7\u7D55\u7ABA\u89A6\uFF1B\u4E8C\u4E58\u3001\u4E09\u4E58\uFF0C\u5BE7\u5E0C\u807D\u53D7\u3002\u6700\u52DD\u7A2E\u667A\uFF0C\u838A\u56B4\u4E4B\u8FF9\u65E2\u9686\uFF1B\u666E\u8CE2\u3001\u6587\u6B8A\uFF0C\u9858\u884C\u4E4B\u56E0\u65AF\u6EFF\u3002\u4E00\u53E5\u4E4B\u5167\uFF0C\u5305\u6CD5\u754C\u4E4B\u7121\u908A\uFF1B\u4E00\u6BEB\u4E4B\u4E2D\uFF0C\u7F6E\u524E\u571F\u800C\u975E\u9698\u3002\u6469\u7AED\u9640\u570B\uFF0C\u8087\u8208\u5999\u6703\u4E4B\u7DE3\uFF1B\u666E\u5149\u6CD5\u5802\uFF0C\u7230\u6577\u5BC2\u6EC5\u4E4B\u7406\u3002\u7DEC\u60DF\u5967\u7FA9\uFF0C\u8B6F\u5728\u6649\u671D\uFF1B\u6642\u903E\u516D\u4EE3\uFF0C\u5E74\u5C07\u56DB\u767E\u3002[7]\u7136\u5713\u4E00\u90E8\u4E4B\u5178\uFF0C\u7E94\u7372\u4E09\u842C\u9918\u8A00\uFF0C\u552F\u555F\u534A\u73E0\uFF0C\u672A\u7ABA\u5168\u5BF6\u3002\u6715\u805E\u5176\u68B5\u672C\uFF0C\u5148\u5728\u4E8E\u95D0\u570B\u4E2D\uFF0C\u9063\u4F7F\u5949\u8FCE\uFF0C\u8FD1\u65B9\u81F3\u6B64\u3002\u65E2\u89A9\u767E\u5343\u4E4B\u5999\u980C\uFF0C\u4E43\u62AB\u5341\u842C\u4E4B\u6B63\u6587\u3002\u7CB5\u4EE5\u8B49\u8056\u5143\u5E74\uFF0C\u6B72\u6B21\u4E59\u672A\uFF0C\u6708\u65C5\u6CBD\u6D17\uFF0C\u6714\u60DF\u620A\u7533\uFF0C\u4EE5\u5176\u5341\u56DB\u65E5\u8F9B\u9149\uFF0C\u65BC\u5927\u904D\u7A7A\u5BFA\uFF0C\u89AA\u53D7\u7B46\u524A\uFF0C\u656C\u8B6F\u65AF\u7D93\u3002\u9042\u5F97\u7518\u9732\u6D41\u6D25\uFF0C\u9810\u5922\u5E9A\u7533\u4E4B\u5915\uFF1B\u818F\u96E8\u7051\u6F64\uFF0C\u5F8C\u8983\u58EC\u620C\u4E4B\u8FB0\u3002\u5F0F\u958B\u5BE6\u76F8\u4E4B\u9580\uFF0C\u9084\u7B26\u4E00\u5473\u4E4B\u6FA4\u3002\u4EE5\u8056\u66C6\u4E8C\u5E74\uFF0C\u6B72\u6B21[A1]\u5DF1\u4EA5\uFF0C\u5341\u6708\u58EC\u5348\u6714\uFF0C\u516B\u65E5[A2]\u5DF1\u4E11\uFF0C\u7E55\u5BEB\u7562\u529F\uFF1B\u6DFB\u6027\u6D77\u4E4B\u6CE2\u703E\uFF0C\u5ED3\u6CD5\u754C\u4E4B\u7586\u57DF\u3002\u5927\u4E58\u9813\u6559\uFF0C\u666E\u88AB\u65BC\u7121\u7AAE\uFF1B\u65B9\u5EE3\u771F[8]\u7B4C\uFF0C\u9050\u8A72\u65BC\u6709\u8B58\u3002\u8C48\u8B02\u5F8C\u4E94\u767E\u6B72\uFF0C\u5FFD\u5949\u91D1\u53E3\u4E4B\u8A00\uFF1B\u5A11\u5A46\u5883\u4E2D\uFF0C\u4FC4\u555F\u73E0\u51FD\u4E4B\u7955\u3002\u6240\u5180\uFF1A\u95E1\u63DA\u6C99\u754C\uFF0C\u5BA3\u66A2\u5875\u5340\uFF1B\u4E26\u5169\u66DC\u800C\u9577\u61F8\uFF0C\u5F4C\u5341\u65B9\u800C\u6C38\u5E03\u3002\u4E00\u7ABA\u5BF6\u5048\uFF0C\u6176\u6EA2\u5FC3\u9748\uFF1B\u4E09\u5FA9\u5E7D\u5B97\uFF0C\u559C\u76C8\u8EAB\u610F\u3002\u96D6\u5247\u7121\u8AAA\u7121\u793A\uFF0C\u7406\u7B26\u4E0D\u4E8C\u4E4B\u9580\uFF1B[9]\u7136\u800C\u56E0\u8A00\u986F\u8A00\uFF0C\u65B9\u95E1\u5927\u5343\u4E4B\u7FA9\u3002\u8F12\u7533\u9119\u4F5C\uFF0C\u7230\u984C\u5E8F\u4E91\u3002',\n        target: '',\n      },\n    ],\n  });\n};\nexport default function RollRoute() {\n  const { paragraphs, footnotes } = useLoaderData<typeof loader>();\n  const navigate = useNavigate();\n  const checkedParagraphs = useRef(new Set<number>());\n  const paragraphsComp = paragraphs.map((paragraph, index) => (\n    <Paragraph\n      key={paragraph.num}\n      origin={paragraph.origin}\n      target={paragraph.target}\n      index={index}\n      checkedParagraphs={checkedParagraphs}\n      disabled={paragraph.finish}\n      finish={false}\n      footnotes={footnotes}\n    />\n  ));\n  if (paragraphs.length) {\n    return (\n      <Flex\n        w=\"100%\"\n        flexDir=\"column\"\n        justifyContent=\"flex-start\"\n        alignItems=\"center\"\n        gap={4}\n        mt={10}\n      >\n        {paragraphsComp}\n        <IconButton\n          borderRadius={'50%'}\n          w={12}\n          h={12}\n          pos={'fixed'}\n          bottom={8}\n          right={8}\n          icon={<FiEdit />}\n          aria-label=\"edit roll\"\n          colorScheme={'iconButton'}\n          onClick={() => {\n            navigate(`staging`, {\n              state: {\n                paragraphs: Array.from(checkedParagraphs.current)\n                  .sort()\n                  .map((index) => paragraphs[index]),\n              },\n            });\n          }}\n        >\n          Edit\n        </IconButton>\n      </Flex>\n    );\n  }\n  return <div>Roll</div>;\n}\n", "import { json, LoaderArgs, Response } from '@remix-run/node';\nimport { useCatch, useLoaderData } from '@remix-run/react';\nimport { Box, Flex, Heading, Text } from '@chakra-ui/react';\nimport { Roll } from '~/components/common/roll';\nimport { CloseIcon } from '@chakra-ui/icons';\nimport { Warning } from '~/components/common/errors';\n\nexport const loader = async ({ params }: LoaderArgs) => {\n  const { sutraId } = params;\n  switch (sutraId) {\n    case 'ZH-SUTRA-V1-0001':\n      return json({\n        rolls: [\n          {\n            title: '\u4E16\u4E3B\u5999\u56B4\u54C1\u7B2C\u4E00\u4E4B\u4E00',\n            slug: 'ZH-ROLL-V1-0001',\n            roll_num: '\u7B2C\u4E00\u5377',\n            finish: true,\n          },\n          {\n            title: '\u4E16\u4E3B\u5999\u56B4\u54C1\u7B2C\u4E00\u4E4B\u4E8C',\n            slug: 'ZH-ROLL-V1-0002',\n            roll_num: '\u7B2C\u4E8C\u5377',\n            finish: true,\n          },\n        ],\n      });\n    case 'ZH-SUTRA-V1-0002':\n      return json({\n        rolls: [\n          {\n            title: '\u4E16\u4E3B\u5999\u56B4\u54C1\u7B2C\u4E00\u4E4B\u4E00',\n            slug: 'ZH-ROLL-V1-0001',\n            roll_num: '\u7B2C\u4E00\u5377',\n            finish: true,\n          },\n          {\n            title: '\u4E16\u4E3B\u5999\u56B4\u54C1\u7B2C\u4E00\u4E4B\u4E8C',\n            slug: 'ZH-ROLL-V1-0002',\n            roll_num: '\u7B2C\u4E8C\u5377',\n            finish: true,\n          },\n        ],\n      });\n    case 'ZH-SUTRA-V1-0003':\n      return json({\n        rolls: [\n          {\n            title: '\u4E16\u4E3B\u5999\u56B4\u54C1\u7B2C\u4E00\u4E4B\u4E00',\n            slug: 'ZH-ROLL-V1-0001',\n            roll_num: '\u7B2C\u4E00\u5377',\n            finish: true,\n          },\n          {\n            title: '\u4E16\u4E3B\u5999\u56B4\u54C1\u7B2C\u4E00\u4E4B\u4E8C',\n            slug: 'ZH-ROLL-V1-0002',\n            roll_num: '\u7B2C\u4E8C\u5377',\n            finish: true,\n          },\n        ],\n      });\n    default:\n      throw new Response(\n        'We could not find this sutra, please check if you have provided correct sutra id',\n        { status: 400 }\n      );\n  }\n};\nexport default function SutraSlug() {\n  const { rolls } = useLoaderData<typeof loader>();\n  const rollsComp = rolls.map((roll) => <Roll key={roll.slug} {...roll} />);\n  if (rolls.length) {\n    return (\n      <Box p={10}>\n        <Flex gap={8}>{rollsComp}</Flex>\n      </Box>\n    );\n  } else {\n    return <Box>No roll for this sutra</Box>;\n  }\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 400) {\n    return <Warning content={caught.data} />;\n  }\n}\n", "import { Box, Flex } from '@chakra-ui/react';\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { Sutra } from '~/components/common/sutra';\n\nexport const loader = async () => {\n  return json({\n    sutras: [\n      {\n        slug: 'ZH-SUTRA-V1-0001',\n        title: '\u5927\u65B9\u5EE3\u4F5B\u83EF\u56B4\u7D93',\n        category: '\u83EF\u56B4\u90E8\u985E',\n        roll_count: 80,\n        num_chars: 593144,\n        translator: '\u5510 \u5BE6\u53C9\u96E3\u9640\u8B6F',\n        dynasty: '\u5510',\n        time_from: 695,\n        time_to: 699,\n      },\n      {\n        slug: 'ZH-SUTRA-V1-0002',\n        title: '\u5999\u6CD5\u84EE\u83EF\u7D93',\n        category: '\u83EF\u56B4\u90E8\u985E',\n        roll_count: 80,\n        num_chars: 593144,\n        translator: '\u5510 \u5BE6\u53C9\u96E3\u9640\u8B6F',\n        dynasty: '\u5510',\n        time_from: 695,\n        time_to: 699,\n      },\n      {\n        slug: 'ZH-SUTRA-V1-0003',\n        title: '\u91D1\u525B\u822C\u82E5\u6CE2\u7F85\u871C\u7D93',\n        category: '\u83EF\u56B4\u90E8\u985E',\n        roll_count: 80,\n        num_chars: 593144,\n        translator: '\u5510 \u5BE6\u53C9\u96E3\u9640\u8B6F',\n        dynasty: '\u5510',\n        time_from: 695,\n        time_to: 699,\n      },\n      {\n        slug: 'ZH-SUTRA-V1-0004',\n        title: '\u822C\u82E5\u6CE2\u7F85\u871C\u591A\u5FC3\u7D93',\n        category: '\u83EF\u56B4\u90E8\u985E',\n        roll_count: 80,\n        num_chars: 593144,\n        translator: '\u5510 \u5BE6\u53C9\u96E3\u9640\u8B6F',\n        dynasty: '\u5510',\n        time_from: 695,\n        time_to: 699,\n      },\n      {\n        slug: 'ZH-SUTRA-V1-0005',\n        title: '\u4F5B\u8AAA\u963F\u5F4C\u9640\u7D93',\n        category: '\u83EF\u56B4\u90E8\u985E',\n        roll_count: 80,\n        num_chars: 593144,\n        translator: '\u5510 \u5BE6\u53C9\u96E3\u9640\u8B6F',\n        dynasty: '\u5510',\n        time_from: 695,\n        time_to: 699,\n      },\n    ],\n  });\n};\nexport default function TripitakaRoute() {\n  const { sutras } = useLoaderData<typeof loader>();\n  const sutraComp = sutras.map((sutra) => <Sutra key={sutra.slug} {...sutra} />);\n  return (\n    <Box p={10}>\n      <Flex gap={8} flexWrap={'wrap'}>\n        {sutraComp}\n      </Flex>\n    </Box>\n  );\n}\n", "import { Flex, Box, Button } from '@chakra-ui/react';\nimport { ActionArgs } from '@remix-run/node';\nimport { Form } from '@remix-run/react';\nimport { authenticator } from '~/auth.server';\nexport async function action({ request }: ActionArgs) {\n  await authenticator.logout(request, { redirectTo: '/login' });\n}\nexport default function TranslationRoute() {\n  return (\n    <Flex p={10} background=\"secondary.800\" w=\"100%\" flexDir=\"column\">\n      <Box my={8} textAlign=\"left\">\n        <Form method=\"post\">\n          <Button colorScheme={'iconButton'} width=\"full\" mt={4} type=\"submit\">\n            Logout\n          </Button>\n        </Form>\n      </Box>\n    </Flex>\n  );\n}\n", "import {\n  Flex,\n  Box,\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionIcon,\n  AccordionPanel,\n  Tag,\n  FormControl,\n  FormLabel,\n  Input,\n  useBoolean,\n  Select,\n  useDisclosure,\n  IconButton,\n  Fade,\n  VStack,\n  Tooltip,\n  SimpleGrid,\n} from '@chakra-ui/react';\nimport { json, LoaderArgs } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { assertAuthUser } from '~/auth.server';\nimport { Team, roles, User, langs } from '~/types/user';\nimport { EditIcon } from '@chakra-ui/icons';\nimport { RiUser2Line, RiTeamLine } from 'react-icons/ri';\nimport { FaLanguage } from 'react-icons/fa';\nimport { FormModal } from '~/components/common';\nexport const loader = async () => {\n  return json<{ teams: string[]; roles: string[]; users: User[]; langs: string[] }>({\n    teams: Object.values(Team),\n    roles: roles as unknown as string[],\n    langs: langs as unknown as string[],\n    users: [\n      {\n        username: 'Terry Pan',\n        roles: ['Viewer'],\n        email: 'pantaotao@icloud.com',\n        origin_lang: 'ZH',\n        target_lang: 'EN',\n        team: Team.TEAM0001,\n        first_login: false,\n      },\n      {\n        username: 'Tao Pan',\n        roles: ['Admin'],\n        email: 'pttdev123@gmail.com',\n        origin_lang: 'ZH',\n        target_lang: 'EN',\n        team: Team.TEAM0002,\n        first_login: false,\n      },\n    ],\n  });\n};\nexport default function TripitakaRoute() {\n  const { users, teams, roles, langs } = useLoaderData<typeof loader>();\n  const usersComp = users?.map((user) => {\n    return (\n      <UserConfig\n        key={user.email}\n        user={user}\n        userform={<UserForm {...user} teams={teams} langs={langs} roless={roles} />}\n      />\n    );\n  });\n  return (\n    <Flex p={10} background=\"secondary.800\" w=\"100%\" flexDir=\"column\">\n      {usersComp}\n      <AdminActionButtons teams={teams} roles={roles} langs={langs} />\n    </Flex>\n  );\n}\n\ninterface UserConfigProps {\n  user: User;\n  userform: React.ReactNode;\n}\nconst UserConfig = (props: UserConfigProps) => {\n  const { user, userform } = props;\n  return (\n    <Accordion allowToggle>\n      <AccordionItem>\n        <h2>\n          <AccordionButton _expanded={{ bg: 'primary.800', color: 'white' }}>\n            <Box flex=\"1\" textAlign=\"left\">\n              {user.username}\n              {user.roles?.map((role) => (\n                <Tag key={role} ml={4} background={role === 'Admin' ? 'pink' : 'lightgreen'}>\n                  {role}\n                </Tag>\n              ))}\n            </Box>\n            <AccordionIcon />\n          </AccordionButton>\n        </h2>\n        <AccordionPanel background={'secondary.500'}>{userform}</AccordionPanel>\n      </AccordionItem>\n    </Accordion>\n  );\n};\n\ninterface UserFormProps extends User {\n  teams: string[];\n  langs: string[];\n  roless: string[];\n  isNew?: boolean;\n}\n\ninterface AdminActionButtonsProps {\n  roles: string[];\n  teams: string[];\n  langs: string[];\n}\nconst AdminActionButtons = (props: AdminActionButtonsProps) => {\n  const { roles, teams, langs } = props;\n  const { isOpen, onToggle } = useDisclosure();\n  const { isOpen: isOpenNewUser, onOpen: onOpenNewUser, onClose: onCloseNewUser } = useDisclosure();\n  const user: User = {\n    username: '',\n    email: '',\n    roles: ['Viewer'],\n    team: Team.TEAM0001,\n    origin_lang: 'ZH',\n    target_lang: 'EN',\n    first_login: false,\n  };\n  return (\n    <Box pos={'fixed'} right={8} bottom={8}>\n      <Fade in={isOpen}>\n        <VStack spacing={4} mb={4}>\n          <Tooltip label=\"add a new user\" placement=\"left\">\n            <span>\n              <IconButton\n                colorScheme={'iconButton'}\n                borderRadius={'50%'}\n                w={12}\n                h={12}\n                aria-label=\"open admin edit buttons\"\n                icon={<RiUser2Line />}\n                onClick={onOpenNewUser}\n              />\n              <FormModal\n                header=\"Add a New User\"\n                body={\n                  <UserForm {...user} teams={teams} roless={roles} langs={langs} isNew={true} />\n                }\n                isOpen={isOpenNewUser}\n                onClose={onCloseNewUser}\n                name=\"newuser\"\n              />\n            </span>\n          </Tooltip>\n          <Tooltip label=\"add a new team\" placement=\"left\">\n            <IconButton\n              colorScheme={'iconButton'}\n              borderRadius={'50%'}\n              w={12}\n              h={12}\n              aria-label=\"open admin edit buttons\"\n              icon={<RiTeamLine />}\n            />\n          </Tooltip>\n          <Tooltip label=\"add a new language\" placement=\"left\">\n            <IconButton\n              colorScheme={'iconButton'}\n              borderRadius={'50%'}\n              w={12}\n              h={12}\n              aria-label=\"open admin edit buttons\"\n              icon={<FaLanguage />}\n            />\n          </Tooltip>\n        </VStack>\n      </Fade>\n      <IconButton\n        colorScheme={'iconButton'}\n        borderRadius={'50%'}\n        w={12}\n        h={12}\n        aria-label=\"open admin edit buttons\"\n        icon={<EditIcon />}\n        onClick={onToggle}\n      />\n    </Box>\n  );\n};\n\nconst UserForm = (props: UserFormProps) => {\n  const [toggleEdit, setToggleEdit] = useBoolean(true);\n  const { username, email, team, teams, langs, origin_lang, target_lang, roles, roless, isNew } =\n    props;\n  return (\n    <form method=\"post\">\n      <SimpleGrid columns={isNew ? 2 : 3} spacing={4}>\n        <FormControl>\n          <FormLabel>User name:</FormLabel>\n          <Input type=\"text\" value={username} onChange={() => {}} name=\"username\" />\n        </FormControl>\n        {isNew ? (\n          <FormControl>\n            <FormLabel>Password: </FormLabel>\n            <Input type=\"text\" value={''} onChange={() => {}} name=\"password\" />\n          </FormControl>\n        ) : null}\n        <FormControl>\n          <FormLabel>Email:</FormLabel>\n          <Input type=\"email\" value={email} onChange={() => {}} name=\"email\" />\n        </FormControl>\n        <FormControl>\n          <FormLabel>Team:</FormLabel>\n          <Select value={team} onChange={() => {}}>\n            {teams?.map((team) => (\n              <option key={team} value={team}>\n                {team}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <FormLabel>Role:</FormLabel>\n          <Select value={roles[0]} onChange={() => {}}>\n            {roless?.map((role) => (\n              <option key={role} value={role}>\n                {role}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <FormLabel>Source Language:</FormLabel>\n          <Select value={origin_lang} onChange={() => {}}>\n            {langs?.map((lang) => (\n              <option key={lang} value={lang}>\n                {lang}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <FormLabel>Target Language:</FormLabel>\n          <Select value={target_lang} onChange={() => {}}>\n            {langs?.map((lang) => (\n              <option key={lang} value={lang}>\n                {lang}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n      </SimpleGrid>\n    </form>\n  );\n};\n", "import { LoaderArgs, redirect } from '@remix-run/node';\nimport { assertAuthUser } from '~/auth.server';\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  return redirect('/dashboard');\n};\nexport default function HomeRoute() {\n  return <div>Home</div>;\n}\n", "import { ActionArgs, json, redirect } from '@remix-run/node';\nimport { authenticator } from '~/auth.server';\nimport { emailRegex } from '~/utils';\nimport {\n  Flex,\n  Box,\n  Heading,\n  Link,\n  FormControl,\n  FormLabel,\n  Stack,\n  Input,\n  Checkbox,\n  Button,\n  FormErrorMessage,\n  Spinner,\n} from '@chakra-ui/react';\nimport { useActionData, useTransition, Form } from '@remix-run/react';\nimport { commitSession, getSession } from '~/session.server';\nimport { onlyCreateAdminUserWhenFirstSystemUp } from '~/models/user';\n\nexport const loader = async () => {\n  await onlyCreateAdminUserWhenFirstSystemUp();\n  return json({});\n};\n\nexport async function action({ request }: ActionArgs) {\n  try {\n    const clonedRequest = request.clone();\n    const form = await clonedRequest.formData();\n    const username = form.get('username');\n    const password = form.get('password');\n    if (!username) {\n      return json({ username: 'username cannot be empty' }, { status: 400 });\n    }\n    if (!emailRegex.test(username as string)) {\n      return json({ username: 'please enter valid email' }, { status: 400 });\n    }\n    if (!password) {\n      return json({ password: 'password cannot be empty' }, { status: 400 });\n    }\n    const user = await authenticator.authenticate('form', request);\n    if (user) {\n      let session = await getSession(request.headers.get('cookie'));\n      session.set(authenticator.sessionKey, user);\n\n      let headers = new Headers({ 'Set-Cookie': await commitSession(session) });\n      if (user.first_login) {\n        return redirect('/update_password', { headers });\n      }\n      return redirect('/', { headers });\n    } else {\n      return json({ password: 'please enter correct credentials' }, { status: 401 });\n    }\n  } catch (error) {\n    return json({ password: 'Internal Server Error' }, { status: 500 });\n  }\n}\n\nexport default function LoginRoute() {\n  const actionData = useActionData<{ username: string; password: string }>();\n\n  return (\n    <Flex minHeight=\"100vh\" width=\"full\" align=\"center\" justifyContent=\"center\">\n      <Box\n        borderWidth={1}\n        px={4}\n        width=\"full\"\n        maxWidth=\"500px\"\n        borderRadius={4}\n        textAlign=\"center\"\n        boxShadow=\"lg\"\n      >\n        <Box p={4}>\n          <LoginHeader />\n          <LoginForm actionData={actionData} />\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n\nconst LoginHeader = () => {\n  return (\n    <Box textAlign=\"center\">\n      <Heading>Login to Your Account</Heading>\n    </Box>\n  );\n};\n\ntype LoginFormProps = {\n  actionData?: {\n    username: string;\n    password: string;\n  };\n};\nconst LoginForm = (props: LoginFormProps) => {\n  const transition = useTransition();\n  const isLoading = Boolean(transition.submission);\n  const { username, password } = props.actionData || {};\n  return (\n    <Box my={8} textAlign=\"left\">\n      <Form method=\"post\">\n        <FormControl isInvalid={Boolean(username)}>\n          <FormLabel>Email address</FormLabel>\n          <Input type=\"email\" placeholder=\"Enter your email address\" name=\"username\" />\n          {username ? <FormErrorMessage>{username}</FormErrorMessage> : null}\n        </FormControl>\n\n        <FormControl mt={4} isInvalid={Boolean(password)}>\n          <FormLabel>Password</FormLabel>\n          <Input type=\"password\" placeholder=\"Enter your password\" name=\"password\" />\n          {password ? <FormErrorMessage>{password}</FormErrorMessage> : null}\n        </FormControl>\n\n        <Stack isInline justifyContent=\"space-between\" mt={4}>\n          <Box>\n            <Checkbox>Remember Me</Checkbox>\n          </Box>\n          <Box>\n            <Link color={`primary.500`}>Forgot your password?</Link>\n          </Box>\n        </Stack>\n\n        <Button colorScheme={'iconButton'} width=\"full\" mt={4} type=\"submit\" disabled={isLoading}>\n          {isLoading ? <Spinner /> : 'Log In'}\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n", "export const emailRegex = new RegExp(\n  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n);\n", "export default {'version':'dcb40aaf','entry':{'module':'/build/entry.client-ADLZI4UN.js','imports':['/build/_shared/chunk-TY6SAEDL.js','/build/_shared/chunk-LOPKYMI2.js','/build/_shared/chunk-7N4LN2LI.js','/build/_shared/chunk-C5IU4CE3.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-XYZ4HAJL.js','imports':['/build/_shared/chunk-QIYUMQTB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app':{'id':'routes/__app','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app-7QWNZ26G.js','imports':['/build/_shared/chunk-YWLFOGHQ.js','/build/_shared/chunk-AUYLHJJM.js','/build/_shared/chunk-RPWT6SDD.js','/build/_shared/chunk-CPRH5P5W.js','/build/_shared/chunk-GXZ53O3Z.js','/build/_shared/chunk-CPLWIBSY.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/admin':{'id':'routes/__app/admin','parentId':'routes/__app','path':'admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/admin-5743NI2O.js','imports':['/build/_shared/chunk-VH426VOC.js','/build/_shared/chunk-YSRBB4OA.js','/build/_shared/chunk-VUOGFKXV.js','/build/_shared/chunk-IXRLZF4B.js','/build/_shared/chunk-QIYUMQTB.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/dashboard':{'id':'routes/__app/dashboard','parentId':'routes/__app','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/dashboard-TQV6FNCZ.js','imports':['/build/_shared/chunk-QIYUMQTB.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/index':{'id':'routes/__app/index','parentId':'routes/__app','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/__app/index-F6PCD6WF.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/setting':{'id':'routes/__app/setting','parentId':'routes/__app','path':'setting','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/setting-GMHNZWYJ.js','imports':['/build/_shared/chunk-QIYUMQTB.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/translation':{'id':'routes/__app/translation','parentId':'routes/__app','path':'translation','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/translation-7X7BDGJZ.js','imports':['/build/_shared/chunk-VH426VOC.js','/build/_shared/chunk-YSRBB4OA.js','/build/_shared/chunk-VUOGFKXV.js','/build/_shared/chunk-IXRLZF4B.js','/build/_shared/chunk-QIYUMQTB.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/translation/$sutraId/$rollId/index':{'id':'routes/__app/translation/$sutraId/$rollId/index','parentId':'routes/__app/translation','path':':sutraId/:rollId','index':true,'caseSensitive':undefined,'module':'/build/routes/__app/translation/$sutraId/$rollId/index-3H56LJVX.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/translation/$sutraId/index':{'id':'routes/__app/translation/$sutraId/index','parentId':'routes/__app/translation','path':':sutraId','index':true,'caseSensitive':undefined,'module':'/build/routes/__app/translation/$sutraId/index-2ACPQYTR.js','imports':['/build/_shared/chunk-RM3NL5X6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/translation/index':{'id':'routes/__app/translation/index','parentId':'routes/__app/translation','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/__app/translation/index-G5YCOY63.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/tripitaka':{'id':'routes/__app/tripitaka','parentId':'routes/__app','path':'tripitaka','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/tripitaka-F3RZZM5T.js','imports':['/build/_shared/chunk-YSRBB4OA.js','/build/_shared/chunk-QIYUMQTB.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/tripitaka/$sutraId/$rollId/index':{'id':'routes/__app/tripitaka/$sutraId/$rollId/index','parentId':'routes/__app/tripitaka','path':':sutraId/:rollId','index':true,'caseSensitive':undefined,'module':'/build/routes/__app/tripitaka/$sutraId/$rollId/index-6C5URFZR.js','imports':['/build/_shared/chunk-CPRH5P5W.js','/build/_shared/chunk-GXZ53O3Z.js','/build/_shared/chunk-VUOGFKXV.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/tripitaka/$sutraId/$rollId/staging':{'id':'routes/__app/tripitaka/$sutraId/$rollId/staging','parentId':'routes/__app/tripitaka','path':':sutraId/:rollId/staging','index':undefined,'caseSensitive':undefined,'module':'/build/routes/__app/tripitaka/$sutraId/$rollId/staging-QDY6JOFJ.js','imports':['/build/_shared/chunk-WDMOJSVM.js','/build/_shared/chunk-GXZ53O3Z.js','/build/_shared/chunk-CPLWIBSY.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/__app/tripitaka/$sutraId/index':{'id':'routes/__app/tripitaka/$sutraId/index','parentId':'routes/__app/tripitaka','path':':sutraId','index':true,'caseSensitive':undefined,'module':'/build/routes/__app/tripitaka/$sutraId/index-BXCCJNTH.js','imports':['/build/_shared/chunk-WDMOJSVM.js','/build/_shared/chunk-CPLWIBSY.js','/build/_shared/chunk-RM3NL5X6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/__app/tripitaka/index':{'id':'routes/__app/tripitaka/index','parentId':'routes/__app/tripitaka','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/__app/tripitaka/index-P4KE45L4.js','imports':['/build/_shared/chunk-IXRLZF4B.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-Z272AK5S.js','imports':['/build/_shared/chunk-VJNNFP4S.js','/build/_shared/chunk-YWLFOGHQ.js','/build/_shared/chunk-AUYLHJJM.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/update_password':{'id':'routes/update_password','parentId':'root','path':'update_password','index':undefined,'caseSensitive':undefined,'module':'/build/routes/update_password-53UK37MF.js','imports':['/build/_shared/chunk-VJNNFP4S.js','/build/_shared/chunk-YWLFOGHQ.js','/build/_shared/chunk-AUYLHJJM.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-DCB40AAF.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/update_password.tsx\";\nimport * as route2 from \"./routes/__app.tsx\";\nimport * as route3 from \"./routes/__app/translation.tsx\";\nimport * as route4 from \"./routes/__app/translation/$sutraId/$rollId/index.tsx\";\nimport * as route5 from \"./routes/__app/translation/$sutraId/index.tsx\";\nimport * as route6 from \"./routes/__app/translation/index.tsx\";\nimport * as route7 from \"./routes/__app/dashboard.tsx\";\nimport * as route8 from \"./routes/__app/tripitaka.tsx\";\nimport * as route9 from \"./routes/__app/tripitaka/$sutraId/$rollId/staging.tsx\";\nimport * as route10 from \"./routes/__app/tripitaka/$sutraId/$rollId/index.tsx\";\nimport * as route11 from \"./routes/__app/tripitaka/$sutraId/index.tsx\";\nimport * as route12 from \"./routes/__app/tripitaka/index.tsx\";\nimport * as route13 from \"./routes/__app/setting.tsx\";\nimport * as route14 from \"./routes/__app/admin.tsx\";\nimport * as route15 from \"./routes/__app/index.tsx\";\nimport * as route16 from \"./routes/login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_meta\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/update_password\": {\n      id: \"routes/update_password\",\n      parentId: \"root\",\n      path: \"update_password\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/__app\": {\n      id: \"routes/__app\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/__app/translation\": {\n      id: \"routes/__app/translation\",\n      parentId: \"routes/__app\",\n      path: \"translation\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/__app/translation/$sutraId/$rollId/index\": {\n      id: \"routes/__app/translation/$sutraId/$rollId/index\",\n      parentId: \"routes/__app/translation\",\n      path: \":sutraId/:rollId\",\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/__app/translation/$sutraId/index\": {\n      id: \"routes/__app/translation/$sutraId/index\",\n      parentId: \"routes/__app/translation\",\n      path: \":sutraId\",\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/__app/translation/index\": {\n      id: \"routes/__app/translation/index\",\n      parentId: \"routes/__app/translation\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/__app/dashboard\": {\n      id: \"routes/__app/dashboard\",\n      parentId: \"routes/__app\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/__app/tripitaka\": {\n      id: \"routes/__app/tripitaka\",\n      parentId: \"routes/__app\",\n      path: \"tripitaka\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/__app/tripitaka/$sutraId/$rollId/staging\": {\n      id: \"routes/__app/tripitaka/$sutraId/$rollId/staging\",\n      parentId: \"routes/__app/tripitaka\",\n      path: \":sutraId/:rollId/staging\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/__app/tripitaka/$sutraId/$rollId/index\": {\n      id: \"routes/__app/tripitaka/$sutraId/$rollId/index\",\n      parentId: \"routes/__app/tripitaka\",\n      path: \":sutraId/:rollId\",\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/__app/tripitaka/$sutraId/index\": {\n      id: \"routes/__app/tripitaka/$sutraId/index\",\n      parentId: \"routes/__app/tripitaka\",\n      path: \":sutraId\",\n      index: true,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/__app/tripitaka/index\": {\n      id: \"routes/__app/tripitaka/index\",\n      parentId: \"routes/__app/tripitaka\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/__app/setting\": {\n      id: \"routes/__app/setting\",\n      parentId: \"routes/__app\",\n      path: \"setting\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/__app/admin\": {\n      id: \"routes/__app/admin\",\n      parentId: \"routes/__app\",\n      path: \"admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/__app/index\": {\n      id: \"routes/__app/index\",\n      parentId: \"routes/__app\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "createCache", "createEmotionServer", "import_react", "import_jsx_dev_runtime", "loader", "import_react", "import_node", "import_bcryptjs", "import_util_dynamodb", "import_client_dynamodb", "import_client_dynamodb", "Team", "dayjs", "utc", "bcrypt", "bcrypt", "password", "import_jsx_dev_runtime", "loader", "loader", "import_react", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "loader", "import_react", "import_react", "import_jsx_dev_runtime", "import_react", "import_icons", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "index", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "translation_exports", "loader", "import_react", "import_node", "import_jsx_dev_runtime", "loader", "TripitakaRoute", "import_react", "import_jsx_dev_runtime", "TripitakaRoute", "import_react", "import_jsx_dev_runtime", "TripitakaRoute", "loader", "import_react", "import_icons", "import_node", "import_react", "import_icons", "import_jsx_dev_runtime", "import_react", "import_icons", "import_jsx_dev_runtime", "import_react", "import_icons", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "rollId_exports", "RollRoute", "loader", "import_node", "import_react", "import_fi", "import_jsx_dev_runtime", "loader", "RollRoute", "sutraId_exports", "SutraSlug", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "SutraSlug", "tripitaka_exports", "TripitakaRoute", "loader", "import_react", "import_node", "import_jsx_dev_runtime", "loader", "TripitakaRoute", "action", "TranslationRoute", "import_react", "import_jsx_dev_runtime", "action", "TranslationRoute", "TripitakaRoute", "loader", "import_react", "import_node", "import_icons", "import_jsx_dev_runtime", "loader", "TripitakaRoute", "roles", "langs", "team", "app_exports", "loader", "import_node", "import_jsx_dev_runtime", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "action", "translation_exports", "rollId_exports", "sutraId_exports", "tripitaka_exports", "app_exports"]
}
